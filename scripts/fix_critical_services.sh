#!/bin/bash
# shellcheck disable=SC1091
[ -f /usr/local/lib/codex_env.sh ] && . /usr/local/lib/codex_env.sh

# Critical Infrastructure Fix Script
# Generated by Claude Code Infrastructure Analysis
# Date: 2025-06-23

echo "üîß Starting Critical Infrastructure Fixes..."

# Phase 1: Clean restart with fixed configurations
echo "üìã Phase 1: Service Recovery"

# Stop all services cleanly
echo "  Stopping current services..."
${DOCKER} compose down --remove-orphans 2>/dev/null

# Start core services first
echo "  Starting core data services..."
${DOCKER} compose up -d influxdb grafana

# Wait for core services
sleep 10

# Start data collectors
echo "  Starting data collection services..."
${DOCKER} compose up -d plex-data-collector telegraf

# Start monitoring services
echo "  Starting monitoring services..."
${DOCKER} compose up -d cadvisor node-exporter mysql-exporter

# Start alerting services
echo "  Starting alerting services..."
${DOCKER} compose up -d alertmanager blackbox-exporter snmp-exporter

# Phase 2: Fix ntopng with corrected configuration
echo "üìã Phase 2: ntopng Network Analysis Recovery"
${DOCKER} compose up -d ntopng

# Phase 3: Attempt to start Prometheus and UniFi Poller with new IPs
echo "üìã Phase 3: Advanced Monitoring Services"
echo "  Attempting Prometheus with IP 172.30.0.43..."
${DOCKER} compose up -d prometheus 2>/dev/null || echo "  ‚ö†Ô∏è  Prometheus startup failed - manual intervention required"

echo "  Attempting UniFi Poller with IP 172.30.0.42..."
${DOCKER} compose up -d unpoller 2>/dev/null || echo "  ‚ö†Ô∏è  UniFi Poller startup failed - manual intervention required"

# Phase 4: Service Status Report
echo "üìä Phase 4: Service Status Validation"

sleep 5

echo ""
echo "üîç Service Status Summary:"
echo "=========================="

# Check running services
RUNNING=$(${DOCKER} compose ps | grep "Up" | wc -l)
TOTAL=$(${DOCKER} compose config --services | wc -l)

echo "Running Services: $RUNNING / $TOTAL"
echo ""

# Test key endpoints
echo "üîó Service Endpoint Tests:"
echo "=========================="

# Grafana
if curl -s http://localhost:3000/api/health >/dev/null 2>&1; then
    echo "‚úÖ Grafana: http://localhost:3000 - Operational"
else
    echo "‚ùå Grafana: http://localhost:3000 - Failed"
fi

# InfluxDB
if curl -s http://localhost:8086/health >/dev/null 2>&1; then
    echo "‚úÖ InfluxDB: http://localhost:8086 - Operational"
else
    echo "‚ùå InfluxDB: http://localhost:8086 - Failed"
fi

# Prometheus
if curl -s http://localhost:9090/-/ready >/dev/null 2>&1; then
    echo "‚úÖ Prometheus: http://localhost:9090 - Operational"
else
    echo "‚ö†Ô∏è  Prometheus: http://localhost:9090 - Check IP conflicts"
fi

# Alertmanager
if curl -s http://localhost:9093/api/v1/status >/dev/null 2>&1; then
    echo "‚úÖ Alertmanager: http://localhost:9093 - Operational"
else
    echo "‚ùå Alertmanager: http://localhost:9093 - Failed"
fi

# Node Exporter
if curl -s http://localhost:9100/metrics >/dev/null 2>&1; then
    echo "‚úÖ Node Exporter: http://localhost:9100/metrics - Operational"
else
    echo "‚ùå Node Exporter: http://localhost:9100/metrics - Failed"
fi

# cAdvisor
if curl -s http://localhost:8081/metrics >/dev/null 2>&1; then
    echo "‚úÖ cAdvisor: http://localhost:8081/metrics - Operational"
else
    echo "‚ùå cAdvisor: http://localhost:8081/metrics - Failed"
fi

echo ""
echo "üîß Next Steps:"
echo "=============="
echo "1. Review INFRASTRUCTURE_OPTIMIZATION_REPORT.md for detailed analysis"
echo "2. Enable SNMP on UniFi Gateway (192.168.1.1) for device monitoring"
echo "3. Fix Wazuh configuration (see report Phase 2.1)"
echo "4. Start security services: ${DOCKER} compose up -d wazuh-elasticsearch wazuh-manager"
echo "5. Monitor service logs: ${DOCKER} compose logs -f [service_name]"

echo ""
echo "üéØ Critical Issues Addressed:"
echo "============================="
echo "‚úÖ ntopng port configuration fixed"
echo "‚úÖ Docker Compose IP conflicts resolved"
echo "‚úÖ Core monitoring services restored"
echo "‚ö†Ô∏è  External container conflicts require manual resolution"
echo "‚ö†Ô∏è  Security services need additional configuration"

echo ""
echo "üìä For real-time monitoring:"
echo "==========================="
echo "watch '${DOCKER} compose ps'"
echo ""

echo "üîß Infrastructure fix script completed!"
