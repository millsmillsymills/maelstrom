#!/bin/bash
# Maelstrom Infrastructure Cleanup Script  
# Generated by Claude Code Analysis - 2025-08-06
# Purpose: Remove redundant configuration files and optimize infrastructure

set -e  # Exit on any error

echo "=============================================="
echo "MAELSTROM INFRASTRUCTURE CLEANUP SCRIPT"
echo "Generated: $(date)"
echo "=============================================="

# Confirm with user before proceeding
read -p "This script will archive unused configuration files. Continue? (y/N): " -n 1 -r
echo
if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    echo "Cleanup cancelled."
    exit 0
fi

echo "Starting Maelstrom infrastructure cleanup..."

# Create archive directories
echo "Creating archive directories..."
mkdir -p /home/mills/collections/prometheus/archive
mkdir -p /home/mills/collections/telegraf/archive  
mkdir -p /home/mills/docker/archive
mkdir -p /home/mills/docs/archive

# Archive unused Prometheus configurations
echo "Archiving unused Prometheus configurations..."
prometheus_files=(
    "prometheus-minimal.yml"
    "prometheus-encrypted.yml" 
    "prometheus-optimized.yml"
    "optimized-alerts.yml"
    "anomaly_detection_rules.yml"
    "test-alert-rules.yml"
    "recording_rules.yml"
    "sla_slo_rules.yml"
    "web-config.yml"
    "web.yml"
)

for file in "${prometheus_files[@]}"; do
    if [[ -f "/home/mills/collections/prometheus/$file" ]]; then
        mv "/home/mills/collections/prometheus/$file" "/home/mills/collections/prometheus/archive/"
        echo "  Archived: $file"
    fi
done

# Archive unused Telegraf configurations
echo "Archiving unused Telegraf configurations..."
telegraf_files=(
    "telegraf.conf"
    "telegraf-enhanced.conf"
    "telegraf-optimized.conf"
    "telegraf-simple.conf"
)

for file in "${telegraf_files[@]}"; do
    if [[ -f "/home/mills/collections/telegraf/$file" ]]; then
        mv "/home/mills/collections/telegraf/$file" "/home/mills/collections/telegraf/archive/"
        echo "  Archived: $file"
    fi
done

# Archive old docker-compose variants
echo "Archiving docker-compose variants..."
compose_files=(
    "docker-compose-enhanced-production.yml"
    "docker-compose-enhanced-security.yml"
    "docker-compose-optimized.yml"
    "docker-compose-enhanced.yml"
)

for file in "${compose_files[@]}"; do
    if [[ -f "/home/mills/docker/$file" ]]; then
        mv "/home/mills/docker/$file" "/home/mills/docker/archive/"
        echo "  Archived: $file"
    fi
done

# Clean up old auto-recovery logs (keep last 7 days)
echo "Cleaning up old auto-recovery logs (keeping last 7 days)..."
log_count_before=$(find /home/mills/logs -name "auto-recovery-*.log" | wc -l)
find /home/mills/logs -name "auto-recovery-*.log" -mtime +7 -delete 2>/dev/null || true
log_count_after=$(find /home/mills/logs -name "auto-recovery-*.log" | wc -l)
logs_removed=$((log_count_before - log_count_after))
echo "  Removed $logs_removed old log files"

# Archive redundant documentation files
echo "Archiving redundant documentation files..."
mkdir -p /home/mills/docs/archive

# Move historical reports to archive
historical_docs=(
    "COMPREHENSIVE_CONFIG_ASSESSMENT_2025-06-24.md"
    "COMPREHENSIVE_INFRASTRUCTURE_ANALYSIS_REPORT_2025-06-23.md"
    "DOCKER_LOG_ANALYSIS_REPORT_2025-06-25.md"
    "cross-service-optimization-report-20250628_074006.md"
    "dashboard-customization-report-20250628_073605.md"
    "service-stability-report-20250628_070715.md"
    "ssl-certificate-report-20250628_062807.md"
    "final_enhancement_report.md"
    "docker_assessment_report_2025-06-21.md"
    "unraid_assessment_report_2025-06-21.md"
    "network_security_assessment_2025-06-20.md"
)

for doc in "${historical_docs[@]}"; do
    if [[ -f "/home/mills/$doc" ]]; then
        mv "/home/mills/$doc" "/home/mills/docs/archive/"
        echo "  Archived: $doc"
    fi
done

# Add log rotation cron job
echo "Setting up log rotation cron job..."
cron_entry="0 3 * * * find /home/mills/logs -name 'auto-recovery-*.log' -mtime +7 -delete >/dev/null 2>&1"
(crontab -l 2>/dev/null | grep -v "auto-recovery-.*log" ; echo "$cron_entry") | crontab -
echo "  Added daily cleanup cron job"

# Validate docker-compose configuration
echo "Validating docker-compose configuration..."
if docker-compose config --quiet; then
    echo "  ✅ Docker-compose configuration is valid"
else
    echo "  ❌ Docker-compose configuration has issues!"
    exit 1
fi

# Generate summary
echo ""
echo "=============================================="
echo "CLEANUP SUMMARY"
echo "=============================================="
echo "Prometheus configs archived: $(ls /home/mills/collections/prometheus/archive/*.yml 2>/dev/null | wc -l)"
echo "Telegraf configs archived: $(ls /home/mills/collections/telegraf/archive/*.conf 2>/dev/null | wc -l)"
echo "Docker compose variants archived: $(ls /home/mills/docker/archive/*.yml 2>/dev/null | wc -l)"
echo "Documentation files archived: $(ls /home/mills/docs/archive/*.md 2>/dev/null | wc -l)"
echo "Log files removed: $logs_removed"
echo ""
echo "Current active configurations:"
echo "  Active Prometheus config: prometheus.yml + 5 rule files"
echo "  Active Telegraf config: telegraf-minimal.conf" 
echo "  Active Docker compose: docker-compose.yml"
echo ""
echo "✅ Cleanup completed successfully!"
echo ""
echo "NEXT STEPS:"
echo "1. Restart services to ensure stability: docker-compose restart"
echo "2. Monitor service health: docker-compose ps"
echo "3. Review archived files before permanent deletion"
echo "4. Consider implementing the performance monitoring script"
echo ""
echo "All redundant files have been archived, not deleted."
echo "You can restore any file from the archive directories if needed."